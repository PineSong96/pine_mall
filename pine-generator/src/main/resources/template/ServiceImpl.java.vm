package ${mvcPackage}.${mvcModuleName}.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.github.pagehelper.PageHelper;
import java.util.List;
import lombok.extern.slf4j.Slf4j;
import org.springframework.transaction.annotation.Transactional;
import ${package}.${moduleName}.dao.${className}Dao;
import ${package}.${moduleName}.entity.${className};
import ${mvcPackage}.${mvcModuleName}.service.${className}Service;

@Service
@Slf4j
public class ${className}ServiceImpl implements ${className}Service {

    @Autowired
    private ${className}Dao ${classname}Dao;

    @Override
    public List<${className}> get${className}List(${className} record) {
        return ${classname}Dao.queryAll${className}(record);
    }

    @Override
    public List<${className}> get${className}ByPage( ${className} record, Integer pageSize, Integer pageNum) {

        PageHelper.startPage(pageNum, pageSize);

        return ${classname}Dao.queryAll${className}(record);
    }

    @Override
    public ${className} get${className}ById(Long id) {
        return ${classname}Dao.selectByPrimaryKey(id);
    }

    @Override
    public ${className} get${className}(${className} record) {
        return ${classname}Dao.query${className}(record);
    }

    @Override
    @Transactional(rollbackFor = Exception.class)
    public int create${className}(${className} record) {
        return ${classname}Dao.insertSelective(record);
    }

    @Override
    @Transactional(rollbackFor = Exception.class)
    public int delete(Long id) {
        return ${classname}Dao.delete(id);
    }

    @Override
    @Transactional
    public int update${className}(${className} record) {
        return ${classname}Dao.updateByPrimaryKeySelective(record);
    }

}
