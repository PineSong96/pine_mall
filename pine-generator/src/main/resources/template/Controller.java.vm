package ${package}.${moduleName}.controller;

import java.util.List;
import com.mall.common.api.CommonPage;
import com.mall.common.api.CommonResult;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import ${package}.${moduleName}.entity.${className};
import ${mvcPackage}.${mvcModuleName}.service.${className}Service;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Api(value = "${comments}接口", tags = {"${comments}接口" })
@RestController
@RequestMapping("${moduleName}/${className}")
public class ${className}Controller {

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * <p>获取全部记录。</p>
     */
    @ApiOperation(value = "获取所有${comments}数据", notes = "可以根据条件获取")
    @RequestMapping(value = "/all", method = RequestMethod.GET)
    public CommonResult<List<${className}>> all(${className} record) {
        List<${className}> ${className}List = ${classname}Service.get${className}List(record);
        return CommonResult.success(${className}List);
    }

    /**
     * <p>根据Id。</p>
     */
    @ApiOperation(value = "获取${comments}数据", notes = "根据id来获取${comments}详细信息")
    @RequestMapping(value = "/get/{id}", method = RequestMethod.GET)
    public CommonResult get${className}(@PathVariable("id") Long id) {
        ${className} data = ${classname}Service.get${className}ById(id);
        return CommonResult.success(data);
    }

    /**
     * <p>根据条件获取。</p>
     */
    @ApiOperation(value = "获取${comments}数据", notes = "根据条件获取")
    @RequestMapping(value = "/getOne", method = RequestMethod.GET)
    public CommonResult getOne(${className} record) {

        ${className} data = ${classname}Service.get${className}(record);

        return CommonResult.success(data);
    }

    /**
     * <p>分页查询。</p>
     */
    @ApiOperation(value = "分页获取${comments}数据", notes = "根据条件获取")
    @RequestMapping(value = "/page", method = RequestMethod.GET)
    public CommonResult<CommonPage<${className}>> page(${className} record,
                                                                    @RequestParam(value = "pageSize", defaultValue = "5") Integer pageSize,
                                                                    @RequestParam(value = "pageNum", defaultValue = "1") Integer pageNum) {
        List<${className}> ${className}List = ${classname}Service.get${className}List(record);
        return CommonResult.success(CommonPage.restPage(${className}List));
    }

    /**
     * <p>保存。</p>
     */
    @ApiOperation(value = "新增一条${comments}数据", notes = "新增一条${comments}数据")
    @RequestMapping(value = "/create", method = RequestMethod.POST)
    public CommonResult create(@RequestBody ${className} record) {

        int count = ${classname}Service.create${className}(record);
        if (count > 0 ) {
            return CommonResult.success(count);
        }
        return CommonResult.failed();
    }

    /**
     * <p>更新信息。</p>
     */
    @ApiOperation(value = "更新一条${comments}数据", notes = "更新一条${comments}数据")
    @RequestMapping(value = "/update", method = RequestMethod.PUT)
    public CommonResult update${className}(@RequestBody ${className} record) {

        int count = ${classname}Service.update${className}(record);
        if (count > 0 ) {
            return CommonResult.success(count);
        }
        return CommonResult.failed();
    }

    /**
     * <p>删除。</p>
     */
    @RequestMapping(value = "/del/{id}", method = RequestMethod.DELETE)
    @ApiOperation(value = "删除一条${comments}数据", notes = "根据Id一条${comments}数据")
    public CommonResult delete${className}(@PathVariable("id") Long id) {

        int count = ${classname}Service.delete(id);
        if (count > 0 ) {
            return CommonResult.success(count);
        }
        return CommonResult.failed();
    }

}
